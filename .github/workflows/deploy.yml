name: Docker Build and Push

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-22.04
    env:
      DOCKER_IMAGE: url-shortener-i:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract short SHA
        run: echo "SHORT_SHA=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          DOCKER_BUILDKIT=1 docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.SHORT_SHA }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.SHORT_SHA }} ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.SHORT_SHA }}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest
        env:
          DOCKER_BUILDKIT: 1

#      - name: Build Docker image
#        run: docker build -t ${{ env.DOCKER_IMAGE }} .
##        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }} .
#
#      - name: Set image tag
#      - run: docker tag ${{ env.DOCKER_IMAGE }} ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}
#
#      - name: Push Docker image to Docker Hub
#        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}

      - name: Create SSH key file
        run: echo "${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}" > /tmp/ansible_ssh_key
        env:
          ANSIBLE_SSH_PRIVATE_KEY: ${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}

      - name: Set permissions for SSH key
        run: chmod 600 /tmp/ansible_ssh_key

      - name: Test SSH connection
        run: ssh -i /tmp/ansible_ssh_key -o StrictHostKeyChecking=no ubuntu@ec2-44-204-179-61.compute-1.amazonaws.com 'echo "SSH connection successful"'

      - name: Run ansible deploy palaybook
        uses: ansible/ansible-runner-action@v1
        with:
          playbook: deploy/deploy.yml
          inventory: deploy/inventory.ini
        env:
          ANSIBLE_CONFIG: .github/ansible.cfg
          ANSIBLE_HOST_KEY_CHECKING: "False"
          ANSIBLE_SSH_PRIVATE_KEY: /tmp/ansible_ssh_key
